name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: image

jobs:
  # This workflow contains a single job called "build"
  nginx:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: copy nginx folder
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
        with:
          source: "./"
          target: "~/"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: init letsencrypt && run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/nginx &&
            chmod +x init-letsencrypt.sh &&
            sudo ./init-letsencrypt.sh && 
            sudo docker-compose up -d
  mysql:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: copy mysql folder
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
        with:
          source: "./mysql"
          target: "~/mysql"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: create mysql docker network
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker network create mysql_network || true
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
        env:
          MYSQL_PW:  ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE:  ${{ secrets.MYSQL_DATABASE }}
          script: |
            cd ~/mysql &&
            sudo docker-compose up -d
  teamspeak:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: create ts folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p ~/teamspeak
      - name: create server and run teamspeak
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker create -p 9987:9987/udp -p 10011:10011 -p 30033:30033 -e TS3SERVER_LICENSE=accept --restart always --name teamspeak -v ~/teamspeak/:/var/ts3server/ teamspeak
            sudo docker start teamspeak
  valheim:
    # The type of runner that the job will run on
    # doc for valheim server: https://github.com/lloesche/valheim-server-docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: copy map folder
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
        with:
          source: "./valheim/map"
          target: "~/valheim-server/base_map"
      - name: move map if not exists
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            mv -vn ~/valheim-server/map/ ~/valheim-server/config/worlds/
      - name: create valheim folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p ~/valheim-server/config/worlds ~/valheim-server/data
      - name: install valheim plus (latest)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/valheim-server/config &&
            mkdir -p valheimplus &&
            cd valheimplus &&
            wget https://github.com/valheimPlus/ValheimPlus/releases/download/$(curl --silent "https://api.github.com/repos/valheimPlus/valheimPlus/tags" | jq -r '.[0].name')/UnixServer.tar.gz &&
            tar zxf UnixServer.tar.gz
      - name: run valheim server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker stop valheim-server || true && docker rm valheim-server || true
            sudo docker run -d --name valheim-server --cap-add=sys_nice --stop-timeout 120 -p 2456-2457:2456-2457/udp -v ~/valheim-server/config:/config -v ~/valheim-server/data:/opt/valheim -e SERVER_NAME="Valheim Mittelerde" -e WORLD_NAME="Mittelerde" -e SERVER_PASS="mellon" -e VALHEIM_PLUS="false" -e VPCFG_Server_enabled=true -e VPCFG_Server_enforceMod=false -e VPCFG_Server_dataRate=500 -e VPCFG_SERVER_maxPlayers=100 lloesche/valheim-server



